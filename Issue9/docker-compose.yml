version: '3.8'
services:
  db:
    image: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: imagedb
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app_net

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - app_net

  zookeeper:
    image: wurstmeister/zookeeper
    networks:
      - app_net

  image-service:
    build: ./image-service
    ports:
      - "5000:5000"
    environment:
      DATABASE_URI: postgresql://user:password@db:5432/imagedb
      KAFKA_BROKER: kafka:9092
    depends_on:
      - db
      - kafka
    networks:
      - app_net

  embedding-service:
    build: ./embedding-service
    environment:
      KAFKA_BROKER: kafka:9092
      WEAVIATE_URL: http://weaviate:8080
    depends_on:
      - kafka
      - weaviate
    networks:
      - app_net

  weaviate:
    image: semitechnologies/weaviate:latest
    ports:
      - "8080:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: '100'
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: './data'
      DEFAULT_VECTORIZER_MODULE: 'none'
    volumes:
      - ./data:/var/lib/weaviate
    networks:
      - app_net

volumes:
  db_data:

networks:
  app_net:
    driver: bridge
